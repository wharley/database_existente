'use strict'

const app = require('../app');
const http = require('http');
const loader = require('../utils/modelLoader');


// Obter porta do meio ambiente e armazenamento no Express.

const port = normalizePort('3000');
app.set('port', port);

// Criar servidor HTTP.

let server = http.createServer(app);

// Escutar na porta todas as interfaces de rede.

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


// Normalizar uma porta em um número, string, ou falso.

function normalizePort(val) {
    const port = parseInt(val, 10);

    if (isNaN(port)) {
        // pipe nomeado
        return val;
    }

    if (port >= 0) {
        // número da porta
        return port;
    }

    return false;
}

// Ouvinte de eventos para o servidor HTTP evento "erro".

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    const bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    // Ouvir erros com mensagens amigáveis
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' exige privilégios elevados');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' já está em uso');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

 // ouvir eventos para o servidor HTTP.

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    console.log('Listening on ' + bind);

}